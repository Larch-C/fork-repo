name: Sync All AstrBot Plugins

on:
  workflow_dispatch:          # 手动触发
    inputs:
      dry_run:
        description: '试运行模式（仅显示操作，不实际执行）'
        required: false
        default: false
        type: boolean
      force_sync:
        description: '强制同步所有已fork的仓库'
        required: false
        default: false
        type: boolean
      conflict_resolution:
        description: '重名冲突解决策略'
        required: false
        default: 'rename'
        type: choice
        options:
          - 'skip'           # 跳过冲突仓库
          - 'rename'         # 自动重命名fork
          - 'interactive'    # 记录冲突待手动处理
  schedule:                   # 每小时 UTC 自动同步
    - cron: "0 * * * *"

env:
  PLUGIN_JSON_URL: "https://raw.githubusercontent.com/AstrBotDevs/AstrBot_Plugins_Collection/main/plugins.json"

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.list.outputs.repos }}
      total_count: ${{ steps.list.outputs.total_count }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Fetch plugins.json
        run: bash ./.github/scripts/prepare/fetch_plugins.sh
          
      - name: Parse repo list
        id: list
        run: bash ./.github/scripts/prepare/parse_repo_list.sh

  create-batches:
    runs-on: ubuntu-latest
    needs: prepare
    if: needs.prepare.outputs.total_count > 0
    outputs:
      batches: ${{ steps.batch.outputs.batches }}
      batch_count: ${{ steps.batch.outputs.batch_count }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create batches
        id: batch
        env:
          REPOS_JSON: ${{ needs.prepare.outputs.repos }}
          TOTAL_COUNT: ${{ needs.prepare.outputs.total_count }}
        run: bash ./.github/scripts/create-batches/create_batches.sh

  fork-sync:
    runs-on: ubuntu-latest
    needs: [prepare, create-batches]
    if: needs.create-batches.outputs.batch_count > 0
    strategy:
      max-parallel: 2           # 进一步降低并发数
      fail-fast: false         # 某个批次失败不影响其他批次
      matrix:
        batch: ${{ fromJson(needs.create-batches.outputs.batches) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup environment
        env:
          BATCH_ID: ${{ matrix.batch.batch_id }}
        run: bash ./.github/scripts/fork-sync/setup_env.sh
          
      - name: Setup GH CLI
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: bash ./.github/scripts/fork-sync/setup_gh_cli.sh
          
      - name: Verify authentication
        run: bash ./.github/scripts/fork-sync/verify_auth.sh
          
      - name: Batch delay (Rate limiting protection)
        if: ${{ matrix.batch.batch_id != 0 }}
        env:
          BATCH_ID: ${{ matrix.batch.batch_id }}
        run: bash ./.github/scripts/fork-sync/batch_delay.sh
          
      - name: Process batch repositories
        env:
          BATCH_ID: ${{ matrix.batch.batch_id }}
          CONFLICT_STRATEGY: ${{ inputs.conflict_resolution || 'rename' }}
          REPOS_JSON: ${{ toJson(matrix.batch.repos) }}
          DRY_RUN: ${{ inputs.dry_run }}
          FORCE_SYNC: ${{ inputs.force_sync }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: bash ./.github/scripts/fork-sync/process_batch_repos.sh
          
      - name: Upload batch results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: batch-results-${{ matrix.batch.batch_id }}
          path: results/
          retention-days: 7

  collect-results:
    runs-on: ubuntu-latest
    needs: [prepare, create-batches, fork-sync]
    if: always() && needs.prepare.outputs.total_count > 0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download all batch results
        uses: actions/download-artifact@v4
        with:
          pattern: batch-results-*
          path: all-results/
          merge-multiple: true

      - name: Generate results table
        env:
          DRY_RUN: ${{ inputs.dry_run }}
          CONFLICT_STRATEGY: ${{ inputs.conflict_resolution || 'rename' }}
          TOTAL_COUNT: ${{ needs.prepare.outputs.total_count }}
        run: bash ./.github/scripts/collect-results/generate_results_table.sh
          
      - name: Upload results summary
        uses: actions/upload-artifact@v4
        with:
          name: fork-sync-results
          path: results_summary.md
          retention-days: 30

      - name: Display results in step summary
        run: bash ./.github/scripts/collect-results/display_results_summary.sh

  summary:
    runs-on: ubuntu-latest
    needs: [prepare, create-batches, fork-sync, collect-results]
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Final summary
        env:
          TOTAL_COUNT: ${{ needs.prepare.outputs.total_count }}
          BATCH_COUNT: ${{ needs.create-batches.outputs.batch_count }}
          DRY_RUN: ${{ inputs.dry_run }}
          FORCE_SYNC: ${{ inputs.force_sync }}
          CONFLICT_STRATEGY: ${{ inputs.conflict_resolution || 'rename' }}
          PREPARE_RESULT: ${{ needs.prepare.result }}
          CREATE_BATCHES_RESULT: ${{ needs.create-batches.result }}
          FORK_SYNC_RESULT: ${{ needs.fork-sync.result }}
          COLLECT_RESULTS_RESULT: ${{ needs.collect-results.result }}
        run: bash ./.github/scripts/summary/final_summary.sh
