name: Fork / Sync All AstrBot Plugins

on:
  workflow_dispatch:          # 手动触发
  # schedule:                 # 可选：每天 03:00 UTC
  #   - cron: "0 3 * * *"

env:
  PLUGIN_JSON_URL: "https://raw.githubusercontent.com/AstrBotDevs/AstrBot_Plugins_Collection/main/plugins.json"

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.list.outputs.repos }}
    steps:
      - name: Fetch plugins.json
        run: curl -fsSL "$PLUGIN_JSON_URL" -o plugins.json

      - name: Parse repo list
        id: list
        run: |
          # 提取 repo 字段并去重
          repos=$(jq -r '.[].repo' plugins.json | sort -u | sed 's/git@github.com:/https:\/\/github.com\//' | sed 's/\.git$//')
          echo "repos<<EOF" >> $GITHUB_OUTPUT
          echo "$repos" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  fork-sync:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      max-parallel: 10          # 每组 10 并发
      matrix:
        repo: ${{ fromJson(needs.prepare.outputs.repos) }}
    steps:
      - name: Setup GH CLI
        run: echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

      - name: Sleep between groups
        if: strategy.job-index % 10 == 0 && strategy.job-index != 0
        run: sleep 30

      - name: Fork or sync
        env:
          REPO: ${{ matrix.repo }}
        run: |
          set -e
          owner_repo=${REPO#*github.com/}
          owner_repo=${owner_repo%/}
          owner=$(echo "$owner_repo" | cut -d/ -f1)
          repo=$(echo "$owner_repo" | cut -d/ -f2)

          my_login=$(gh api user --jq .login)
          my_fork="${my_login}/${repo}"

          if gh repo view "$my_fork" --json name >/dev/null 2>&1; then
            echo "已 fork，开始同步上游：$owner_repo"
            git clone --bare "https://${GH_PAT}@github.com/${owner_repo}.git" upstream.git
            git clone "https://${GH_PAT}@github.com/${my_fork}.git" fork
            cd fork
            default_branch=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
            git remote add upstream ../upstream.git
            git fetch upstream --tags
            git checkout "$default_branch"
            git reset --hard upstream/"$default_branch"
            git push --force-with-lease origin "$default_branch"
            git push --tags --force
            cd ..
            rm -rf upstream.git fork
          else
            echo "尚未 fork，开始 fork：$owner_repo"
            gh repo fork "$owner_repo" --clone=false
          fi